diff --git a/src/contest/core/contest.rs b/src/contest/core/contest.rs
index f445e27..55d4b70 100644
--- a/src/contest/core/contest.rs
+++ b/src/contest/core/contest.rs
@@ -1,5 +1,6 @@
 use crate::config::Config;
-use super::{ContestState, state::manager::ContestStateManager};
+use crate::contest::state::ContestState;
+use crate::contest::state::manager::ContestStateManager;
 use crate::contest::error::Result;
 use crate::fs::FileManager;
 
diff --git a/src/contest/core/mod.rs b/src/contest/core/mod.rs
index b32776a..346c5b3 100644
--- a/src/contest/core/mod.rs
+++ b/src/contest/core/mod.rs
@@ -1,12 +1,11 @@
 mod contest;
-mod state;
 mod state_manager;
 mod test;
 mod url;
 mod path;
 
 pub use contest::Contest;
-pub use state::ContestState;
+pub use crate::contest::state::ContestState;
 pub use state_manager::StateManager;
 pub use test::TestManager;
 pub use url::UrlGenerator;
diff --git a/src/contest/core/state.rs b/src/contest/core/state.rs
deleted file mode 100644
index 683731e..0000000
--- a/src/contest/core/state.rs
+++ /dev/null
@@ -1,85 +0,0 @@
-use serde::{Serialize, Deserialize};
-use std::path::PathBuf;
-
-/// コンテストの状態を管理する構造体
-#[derive(Debug, Clone, Serialize, Deserialize)]
-pub struct ContestState {
-    /// アクティブなコンテストのディレクトリ
-    #[serde(default)]
-    pub active_contest_dir: PathBuf,
-
-    /// コンテスト情報
-    pub contest: String,
-
-    /// 問題ID
-    pub problem: Option<String>,
-
-    /// 使用言語
-    pub language: Option<String>,
-
-    /// サイトID（例: atcoder, codeforces）
-    pub site: String,
-}
-
-impl ContestState {
-    /// 新しい状態を作成
-    pub fn new() -> Self {
-        Self {
-            active_contest_dir: PathBuf::new(),
-            contest: String::new(),
-            problem: None,
-            language: None,
-            site: String::new(),
-        }
-    }
-
-    /// 問題IDを設定
-    pub fn with_problem(mut self, problem_id: &str) -> Self {
-        self.problem = Some(problem_id.to_string());
-        self
-    }
-
-    /// 言語を設定
-    pub fn with_language(mut self, language: &str) -> Self {
-        self.language = Some(language.to_string());
-        self
-    }
-
-    /// コンテストIDを設定
-    pub fn with_contest(mut self, contest_id: &str) -> Self {
-        self.contest = contest_id.to_string();
-        self
-    }
-
-    /// サイトを設定
-    pub fn with_site(mut self, site: &str) -> Self {
-        self.site = site.to_string();
-        self
-    }
-
-    /// アクティブディレクトリを設定
-    pub fn with_active_dir(mut self, dir: PathBuf) -> Self {
-        self.active_contest_dir = dir;
-        self
-    }
-
-    /// 問題IDを取得
-    pub fn problem_id(&self) -> Option<&str> {
-        self.problem.as_deref()
-    }
-
-    /// 言語を取得
-    pub fn language(&self) -> Option<&str> {
-        self.language.as_deref()
-    }
-
-    /// アクティブディレクトリを取得
-    pub fn active_dir(&self) -> &PathBuf {
-        &self.active_contest_dir
-    }
-
-    /// 問題を設定
-    pub fn set_problem(&mut self, problem_id: &str) {
-        self.problem = Some(problem_id.to_string());
-    }
-}
diff --git a/src/contest/state/mod.rs b/src/contest/state/mod.rs
index ef424d4..5a18791 100644
--- a/src/contest/state/mod.rs
+++ b/src/contest/state/mod.rs
@@ -1,16 +1,28 @@
 pub mod manager;
 
 use std::path::PathBuf;
+use serde::{Serialize, Deserialize};
 
 /// コンテストの状態を表す構造体
-#[derive(Debug, Default)]
+#[derive(Debug, Default, Clone, Serialize, Deserialize)]
 pub struct ContestState {
+    /// アクティブなコンテストのディレクトリ
+    #[serde(default)]
+    pub active_contest_dir: PathBuf,
+
+    /// コンテスト情報
+    #[serde(default)]
+    pub contest: String,
+
     /// 問題ID
-    problem_id: Option<String>,
+    pub problem_id: Option<String>,
+
     /// 使用言語
-    language: Option<String>,
-    /// アクティブディレクトリ
-    active_dir: Option<PathBuf>,
+    pub language: Option<String>,
+
+    /// サイトID（例: atcoder, codeforces）
+    #[serde(default)]
+    pub site: String,
 }
 
 impl ContestState {
@@ -31,9 +43,21 @@ impl ContestState {
         self
     }
 
+    /// コンテスト情報を設定
+    pub fn with_contest(mut self, contest_id: &str) -> Self {
+        self.contest = contest_id.to_string();
+        self
+    }
+
+    /// サイトIDを設定
+    pub fn with_site(mut self, site: &str) -> Self {
+        self.site = site.to_string();
+        self
+    }
+
     /// アクティブディレクトリを設定
-    pub fn with_active_dir(mut self, active_dir: PathBuf) -> Self {
-        self.active_dir = Some(active_dir);
+    pub fn with_active_dir(mut self, dir: PathBuf) -> Self {
+        self.active_contest_dir = dir;
         self
     }
 
@@ -48,7 +72,12 @@ impl ContestState {
     }
 
     /// アクティブディレクトリを取得
-    pub fn active_dir(&self) -> Option<&PathBuf> {
-        self.active_dir.as_ref()
+    pub fn active_dir(&self) -> &PathBuf {
+        &self.active_contest_dir
+    }
+
+    /// 問題IDを設定（可変参照版）
+    pub fn set_problem(&mut self, problem_id: &str) {
+        self.problem_id = Some(problem_id.to_string());
     }
 } 
\ No newline at end of file
