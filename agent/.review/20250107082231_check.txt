    Checking cph v0.1.0 (/home/cphelper-dev/project-cph)
error[E0432]: unresolved import `super::error::io_err`
 --> src/fs/backup.rs:5:5
  |
5 | use super::error::io_err;
  |     ^^^^^^^^^^^^^^^^^^^^ no `io_err` in `fs::error`

error[E0432]: unresolved imports `crate::fs::error::io_err`, `crate::fs::error::not_found_err`, `crate::fs::error::invalid_path_err`
 --> src/fs/manager.rs:4:24
  |
4 | use crate::fs::error::{io_err, not_found_err, invalid_path_err};
  |                        ^^^^^^  ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^ no `invalid_path_err` in `fs::error`
  |                        |       |
  |                        |       no `not_found_err` in `fs::error`
  |                        no `io_err` in `fs::error`

error[E0432]: unresolved import `crate::fs::error::io_err`
 --> src/fs/transaction.rs:5:5
  |
5 | use crate::fs::error::io_err;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^ no `io_err` in `fs::error`

error[E0432]: unresolved import `crate::error::ErrorContext`
 --> src/fs/error/helpers.rs:2:27
  |
2 | use crate::error::{Error, ErrorContext};
  |                           ^^^^^^^^^^^^ no `ErrorContext` in `error`

warning: unused import: `PathBuf`
 --> src/fs/error/helpers.rs:1:23
  |
1 | use std::path::{Path, PathBuf};
  |                       ^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

error[E0277]: the trait bound `kind::FileSystemErrorKind: error::ErrorKind` is not satisfied
  --> src/fs/error/helpers.rs:8:9
   |
7  |     Error::new(
   |     ---------- required by a bound introduced by this call
8  |         FileSystemErrorKind::NotFound,
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `error::ErrorKind` is not implemented for `kind::FileSystemErrorKind`
   |
   = help: the following other types implement trait `error::ErrorKind`:
             ConfigErrorKind
             ContestErrorKind
             DockerErrorKind
             error::fs::FileSystemErrorKind
             error::helpers::OtherErrorKind
note: required by a bound in `error::Error::new`
  --> src/error/mod.rs:34:27
   |
34 |     pub fn new(kind: impl ErrorKind + 'static, message: impl Into<String>) -> Self {
   |                           ^^^^^^^^^ required by this bound in `Error::new`

error[E0277]: the trait bound `kind::FileSystemErrorKind: error::ErrorKind` is not satisfied
  --> src/fs/error/helpers.rs:21:9
   |
20 |     Error::new(
   |     ---------- required by a bound introduced by this call
21 |         FileSystemErrorKind::Io,
   |         ^^^^^^^^^^^^^^^^^^^^^^^ the trait `error::ErrorKind` is not implemented for `kind::FileSystemErrorKind`
   |
   = help: the following other types implement trait `error::ErrorKind`:
             ConfigErrorKind
             ContestErrorKind
             DockerErrorKind
             error::fs::FileSystemErrorKind
             error::helpers::OtherErrorKind
note: required by a bound in `error::Error::new`
  --> src/error/mod.rs:34:27
   |
34 |     pub fn new(kind: impl ErrorKind + 'static, message: impl Into<String>) -> Self {
   |                           ^^^^^^^^^ required by this bound in `Error::new`

error[E0277]: the trait bound `kind::FileSystemErrorKind: error::ErrorKind` is not satisfied
  --> src/fs/error/helpers.rs:35:9
   |
34 |     Error::new(
   |     ---------- required by a bound introduced by this call
35 |         FileSystemErrorKind::Permission,
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `error::ErrorKind` is not implemented for `kind::FileSystemErrorKind`
   |
   = help: the following other types implement trait `error::ErrorKind`:
             ConfigErrorKind
             ContestErrorKind
             DockerErrorKind
             error::fs::FileSystemErrorKind
             error::helpers::OtherErrorKind
note: required by a bound in `error::Error::new`
  --> src/error/mod.rs:34:27
   |
34 |     pub fn new(kind: impl ErrorKind + 'static, message: impl Into<String>) -> Self {
   |                           ^^^^^^^^^ required by this bound in `Error::new`

error[E0277]: the trait bound `kind::FileSystemErrorKind: error::ErrorKind` is not satisfied
  --> src/fs/error/helpers.rs:48:9
   |
47 |     Error::new(
   |     ---------- required by a bound introduced by this call
48 |         FileSystemErrorKind::InvalidPath,
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `error::ErrorKind` is not implemented for `kind::FileSystemErrorKind`
   |
   = help: the following other types implement trait `error::ErrorKind`:
             ConfigErrorKind
             ContestErrorKind
             DockerErrorKind
             error::fs::FileSystemErrorKind
             error::helpers::OtherErrorKind
note: required by a bound in `error::Error::new`
  --> src/error/mod.rs:34:27
   |
34 |     pub fn new(kind: impl ErrorKind + 'static, message: impl Into<String>) -> Self {
   |                           ^^^^^^^^^ required by this bound in `Error::new`

error[E0277]: the trait bound `kind::FileSystemErrorKind: error::ErrorKind` is not satisfied
  --> src/fs/error/helpers.rs:61:9
   |
60 |     Error::new(
   |     ---------- required by a bound introduced by this call
61 |         FileSystemErrorKind::Transaction,
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `error::ErrorKind` is not implemented for `kind::FileSystemErrorKind`
   |
   = help: the following other types implement trait `error::ErrorKind`:
             ConfigErrorKind
             ContestErrorKind
             DockerErrorKind
             error::fs::FileSystemErrorKind
             error::helpers::OtherErrorKind
note: required by a bound in `error::Error::new`
  --> src/error/mod.rs:34:27
   |
34 |     pub fn new(kind: impl ErrorKind + 'static, message: impl Into<String>) -> Self {
   |                           ^^^^^^^^^ required by this bound in `Error::new`

error[E0277]: the trait bound `kind::FileSystemErrorKind: error::ErrorKind` is not satisfied
  --> src/fs/error/helpers.rs:78:9
   |
77 |     Error::new(
   |     ---------- required by a bound introduced by this call
78 |         FileSystemErrorKind::Backup,
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `error::ErrorKind` is not implemented for `kind::FileSystemErrorKind`
   |
   = help: the following other types implement trait `error::ErrorKind`:
             ConfigErrorKind
             ContestErrorKind
             DockerErrorKind
             error::fs::FileSystemErrorKind
             error::helpers::OtherErrorKind
note: required by a bound in `error::Error::new`
  --> src/error/mod.rs:34:27
   |
34 |     pub fn new(kind: impl ErrorKind + 'static, message: impl Into<String>) -> Self {
   |                           ^^^^^^^^^ required by this bound in `Error::new`

error[E0277]: the trait bound `kind::FileSystemErrorKind: error::ErrorKind` is not satisfied
  --> src/fs/error/helpers.rs:95:9
   |
94 |     Error::new(
   |     ---------- required by a bound introduced by this call
95 |         FileSystemErrorKind::Validation,
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `error::ErrorKind` is not implemented for `kind::FileSystemErrorKind`
   |
   = help: the following other types implement trait `error::ErrorKind`:
             ConfigErrorKind
             ContestErrorKind
             DockerErrorKind
             error::fs::FileSystemErrorKind
             error::helpers::OtherErrorKind
note: required by a bound in `error::Error::new`
  --> src/error/mod.rs:34:27
   |
34 |     pub fn new(kind: impl ErrorKind + 'static, message: impl Into<String>) -> Self {
   |                           ^^^^^^^^^ required by this bound in `Error::new`

error[E0277]: the trait bound `kind::FileSystemErrorKind: error::ErrorKind` is not satisfied
   --> src/fs/error/helpers.rs:112:9
    |
111 |     Error::new(
    |     ---------- required by a bound introduced by this call
112 |         FileSystemErrorKind::Other(error.into()),
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `error::ErrorKind` is not implemented for `kind::FileSystemErrorKind`
    |
    = help: the following other types implement trait `error::ErrorKind`:
              ConfigErrorKind
              ContestErrorKind
              DockerErrorKind
              error::fs::FileSystemErrorKind
              error::helpers::OtherErrorKind
note: required by a bound in `error::Error::new`
   --> src/error/mod.rs:34:27
    |
34  |     pub fn new(kind: impl ErrorKind + 'static, message: impl Into<String>) -> Self {
    |                           ^^^^^^^^^ required by this bound in `Error::new`

Some errors have detailed explanations: E0277, E0432.
For more information about an error, try `rustc --explain E0277`.
warning: `cph` (lib) generated 1 warning
error: could not compile `cph` (lib) due to 12 previous errors; 1 warning emitted
