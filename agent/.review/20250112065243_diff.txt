diff --git a/src/container/runtime/builder.rs b/src/container/runtime/builder.rs
index fdfb2a5..8fd05c4 100644
--- a/src/container/runtime/builder.rs
+++ b/src/container/runtime/builder.rs
@@ -2,7 +2,8 @@ use super::{Container, Runtime};
 use super::config::Config;
 use std::sync::Arc;
 use std::path::PathBuf;
-use anyhow::Result;
+use anyhow::{Result, anyhow};
+use crate::config::Config as GlobalConfig;
 
 pub struct Builder {
     config: Config,
@@ -66,16 +67,21 @@ impl Builder {
         self.config.args = args;
         self.config.working_dir = PathBuf::from(source_file);
 
+        // グローバル設定から言語固有の設定を取得
+        let global_config = GlobalConfig::get_default_config()?;
+        
         match language {
             "python" => {
-                self.config.image = "python:3.9".to_string();
-                println!("ContainerBuilder: Pythonイメージを設定");
+                let image = global_config.get::<String>("languages.python.runner.image")?;
+                self.config.image = image;
+                println!("ContainerBuilder: Pythonイメージを設定: {}", self.config.image);
             }
             "rust" => {
-                self.config.image = "rust:1.70".to_string();
-                println!("ContainerBuilder: Rustイメージを設定");
+                let image = global_config.get::<String>("languages.rust.runner.image")?;
+                self.config.image = image;
+                println!("ContainerBuilder: Rustイメージを設定: {}", self.config.image);
             }
-            _ => return Err(anyhow::anyhow!("サポートされていない言語です: {}", language)),
+            _ => return Err(anyhow!("サポートされていない言語です: {}", language)),
         }
 
         if self.config.id.is_empty() {
diff --git a/src/container/runtime/config.rs b/src/container/runtime/config.rs
index cb8ae36..6a9a20e 100644
--- a/src/container/runtime/config.rs
+++ b/src/container/runtime/config.rs
@@ -77,7 +77,20 @@ impl Default for ResourceLimits {
     }
 }
 
-pub fn get_containerd_config() -> Result<(String, String)> {
+/// containerdの設定を取得します
+/// 
+/// # Returns
+/// 
+/// * `Result<(String, String)>` - (ソケットパス, ネームスペース)のタプル
+/// 
+/// # Errors
+/// 
+/// 以下の場合にエラーを返します：
+/// - 設定ファイルの読み込みに失敗した場合
+/// - 必要な設定値が見つからない場合
+/// - 設定値の型変換に失敗した場合
+#[allow(clippy::module_name_repetitions)]
+pub fn get_runtime_config() -> Result<(String, String)> {
     let config = GlobalConfig::get_default_config()?;
     let socket = config.get::<String>("system.container.runtime.containerd.socket")?;
     let namespace = config.get::<String>("system.container.runtime.containerd.namespace")?;
