digraph DependencyGraph {
  rankdir=TB;
  node [shape=box, style=rounded];
  
  "src.circular_a" [label="src.circular_a", fillcolor="#ffffff", style=filled];
  "src.validators" [label="src.validators", fillcolor="#ffffff", style=filled];
  "src.types" [label="src.types", fillcolor="#ffffff", style=filled];
  "src" [label="src", fillcolor="#ffffff", style=filled];
  "src.circular_b" [label="src.circular_b", fillcolor="#ffffff", style=filled];
  "src.config_service" [label="src.config_service", fillcolor="#ffffff", style=filled];
  "src.main" [label="src.main", fillcolor="#ffffff", style=filled];
  "src.api_handler" [label="src.api_handler", fillcolor="#ffffff", style=filled];
  "src.formatters" [label="src.formatters", fillcolor="#ffffff", style=filled];
  "src.user_service" [label="src.user_service", fillcolor="#ffffff", style=filled];
  "src.constants" [label="src.constants", fillcolor="#ffffff", style=filled];
  
  "src.circular_a" -> "src.circular_b";
  "src.validators" -> "src.types";
  "src.circular_b" -> "src.circular_a";
  "src.config_service" -> "src.formatters";
  "src.config_service" -> "src.types";
  "src.config_service" -> "src.constants";
  "src.main" -> "src.api_handler";
  "src.api_handler" -> "src.types";
  "src.api_handler" -> "src.user_service";
  "src.api_handler" -> "src.config_service";
  "src.formatters" -> "src.constants";
  "src.user_service" -> "src.validators";
  "src.user_service" -> "src.types";
  
  // 循環依存
  edge [color=red, style=bold];
  "src.circular_a" -> "src.circular_b" [color=red];
  "src.circular_b" -> "src.circular_a" [color=red];
  "src.circular_a" -> "src.circular_a" [color=red];
}