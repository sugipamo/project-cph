# Generated by Cargo
# will have compiled files and executables
debug/
target/

# Remove Cargo.lock from gitignore if creating an executable, leave it for libraries
# More information here https://doc.rust-lang.org/cargo/guide/cargo-toml-vs-cargo-lock.html
Cargo.lock

# These are backup files generated by rustfmt
**/*.rs.bk

# MSVC Windows builds of rustc generate these, which store debugging information
*.pdb

# RustRover
#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can
#  be found at https://github.com/github/gitignore/blob/main/Global/JetBrains.gitignore
#  and can be added to the global gitignore or merged into this file.  For a more nuclear
#  option (not recommended) you can uncomment the following to ignore the entire idea folder.
#.idea/

# VS Code
.vscode/
*.code-workspace

# IntelliJ IDEA
.idea/
*.iml
*.ipr
*.iws

# macOS
.DS_Store
.AppleDouble
.LSOverride

# Windows
Thumbs.db
ehthumbs.db
Desktop.ini

# Linux
*~

# Editor backups and swap files
*.swp
*.swo
*.swn
*.bak
*.tmp
*.temp

# Python (for existing Python code)
__pycache__/
*.py[cod]
*$py.class
*.so
.Python
env/
venv/
ENV/
.env
*.egg
*.egg-info/
dist/
build/
*.whl

# SQLite databases
*.db
*.sqlite
*.sqlite3

# Logs
*.log
logs/

# Test coverage
*.gcov
*.gcda
*.gcno
coverage/
*.lcov

# Documentation build artifacts
docs/_build/
docs/_site/

# Rust documentation
target/doc/

# Temporary files
tmp/
temp/

# Operating system cache files
.cache/

# Profiling data
*.profdata
*.profraw

# Benchmarking
target/criterion/

# Rust project-specific
rustc-ice-*.txt

# CPH specific (based on your project structure)
contest_env/
auto_correct_log/
check_result/
*.json
!Cargo.toml
!reorganizer_config.json
!reorganizer_config_example.json